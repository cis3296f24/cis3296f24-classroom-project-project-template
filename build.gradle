buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    gradlePluginPortal()
    mavenLocal()
    google()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {


  }
}



allprojects {
  def target = layout.buildDirectory.dir("winX64/roast/")
  apply plugin: 'eclipse'
  apply plugin: 'idea'
  def javaVersion = project.findProperty("javaVersion")
  // This allows you to "Build and run using IntelliJ IDEA", an option in IDEA's Settings.
  idea {
    module {
      outputDir file('build/classes/java/main')
      testOutputDir file('build/classes/java/test')
    }
  }
  tasks.withType(JavaExec) {
    jvmArgs = ["-Droot.path=${project.rootDir}/", "-Dassets.path=${project.rootDir}/assets/"]
    println "Gradle is using java.home: ${System.getProperty('java.home')}"
    println "Gradle is using java.version: ${System.getProperty('java.version')}"
  }
  tasks.withType(Jar) {
    manifest {
      attributes(
      'Root-Path': "${rootDir}/", // Embeds the assets path
      'Assets-Path': "${rootDir}/assets/" // Embeds the assets path
      )
    }
  }
}

configure(subprojects) {
  apply plugin: 'java-library'
  sourceCompatibility = javaVersion.toInteger()

  // From https://lyze.dev/2021/04/29/libGDX-Internal-Assets-List/
  // The article can be helpful when using assets.txt in your project.
  tasks.register('generateAssetList') {
    inputs.dir("${project.rootDir}/assets/")
    // projectFolder/assets
    File assetsFolder = new File("${project.rootDir}/assets/")
    // projectFolder/assets/assets.txt
    File assetsFile = new File(assetsFolder, "assets.txt")
    // delete that file in case we've already created it
    assetsFile.delete()

    // iterate through all files inside that folder
    // convert it to a relative path
    // and append it to the file assets.txt
    fileTree(assetsFolder).collect { assetsFolder.relativePath(it) }.each {
      assetsFile.append(it + "\n")
    }
  }
  processResources.dependsOn 'generateAssetList'

  compileJava {
    options.incremental = true
  }
}

subprojects {
  version = "${projectVersion}"
  ext.appName = 'ChessGDK'
  repositories {
    mavenCentral()
    maven { url 'https://s01.oss.sonatype.org' }
    // You may want to remove the following line if you have errors downloading dependencies.
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots/' }
    maven { url 'https://jitpack.io' }
  }
}

eclipse.project.name = 'ChessGDK' + '-parent'


